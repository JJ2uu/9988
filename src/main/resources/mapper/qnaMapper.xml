<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="qna">

	<insert id="qnaInsert" parameterType="qna">
		insert into qna
		(member_no, title, content, category)
		values(#{memberNo}, #{title}, #{content}, #{category});
	</insert>
	
	<select id="qnaList" resultType="qna">
		select * from qna order by `date` desc 
	</select>
	
	<select id="qnaDetail" resultType="qna" parameterType="Integer" >
		select * from qna where qna_id = #{qnaId}
	</select>
	
	<update id="qnaUpdate" parameterType="qna">
		update qna set title = #{title}, content = #{content}, category = #{category} where qna_id = #{qnaId}
	</update>
	
	<delete id="qnaDelete" parameterType="qna">
		delete from qna where qna_id = #{qnaId}
	</delete>
	
	<select id="count" resultType="Integer">
		select count(*) from qna
	</select>
	
	<update id="qnaViews" parameterType="Integer">
		update qna 
		set view = view + 1
		where qna_id = #{qnaId}
	</update>
	
	<update id="replyCount" parameterType="Integer">
		update qna
		set reply_count = (select count(*) from qna_reply where qna_id = #{qnaId})
		where qna_id = #{qnaId};
	</update>
	
	<select id="userQnaList" resultType="qna">
		select * from qna where member_no = #{memberNo} order by date desc
	</select>
	
	<select id="searchAll" parameterType="String" resultType="qna">
		select * from qna 
		where content like concat('%',#{search},'%') 
		or title like concat('%',#{search},'%') 
		order by `date` desc
	</select>
	
	<select id="categorySearch" parameterType="Map" resultType="qna">
		select * from qna 
		where category = #{category} 
		and (content like concat('%',#{search},'%') 
		or title like concat('%',#{search},'%')) 
		order by `date` desc
	</select>
	
	<select id="keywordSearch" resultType="qna">
		select * from qna where match (title) against(#{keyword} in natural language mode) and member_no = #{memberNo} order by date DESC;
	</select>
	
</mapper>